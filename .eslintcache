[{"/home/celvin/Desktop/new folder/way2way-react/src/index.tsx":"1","/home/celvin/Desktop/new folder/way2way-react/src/App.tsx":"2","/home/celvin/Desktop/new folder/way2way-react/src/Util/firebase.ts":"3","/home/celvin/Desktop/new folder/way2way-react/src/assets/functions.ts":"4","/home/celvin/Desktop/new folder/way2way-react/src/CTX/CTX.tsx":"5","/home/celvin/Desktop/new folder/way2way-react/src/views/Author/Author.tsx":"6","/home/celvin/Desktop/new folder/way2way-react/src/views/Home/Home.tsx":"7","/home/celvin/Desktop/new folder/way2way-react/src/views/Agency/Agency.tsx":"8","/home/celvin/Desktop/new folder/way2way-react/src/views/Login/Login.tsx":"9","/home/celvin/Desktop/new folder/way2way-react/src/views/404/404.tsx":"10","/home/celvin/Desktop/new folder/way2way-react/src/views/Accomodation/Accomodation.tsx":"11","/home/celvin/Desktop/new folder/way2way-react/src/views/Accomodation/AdView/AdView.tsx":"12","/home/celvin/Desktop/new folder/way2way-react/src/views/Signup/Signup.tsx":"13","/home/celvin/Desktop/new folder/way2way-react/src/views/UserProfile/UserProfile.tsx":"14","/home/celvin/Desktop/new folder/way2way-react/src/views/Signup/UserInfo/UserInfo.tsx":"15","/home/celvin/Desktop/new folder/way2way-react/src/views/ForgotPassword/ForgetPassword.tsx":"16","/home/celvin/Desktop/new folder/way2way-react/src/Components/Navbar/Navbar.tsx":"17","/home/celvin/Desktop/new folder/way2way-react/src/assets/Hooks.tsx":"18","/home/celvin/Desktop/new folder/way2way-react/src/Components/AboutSection/AboutSection.tsx":"19","/home/celvin/Desktop/new folder/way2way-react/src/Components/AccomodationSection/AccomodationSection.tsx":"20","/home/celvin/Desktop/new folder/way2way-react/src/Components/AgencySection/AgencySection.tsx":"21","/home/celvin/Desktop/new folder/way2way-react/src/Components/AgencyList/AgencyList.tsx":"22","/home/celvin/Desktop/new folder/way2way-react/src/Components/AdCard/AdCard.tsx":"23","/home/celvin/Desktop/new folder/way2way-react/src/views/UserProfile/PostAccAdd/PostAccAdd.tsx":"24","/home/celvin/Desktop/new folder/way2way-react/src/Components/Navbar/ToggleButton/ToggleButton.tsx":"25","/home/celvin/Desktop/new folder/way2way-react/src/Components/UploadImages/UploadImages.tsx":"26","/home/celvin/Desktop/new folder/way2way-react/src/Components/Profile/Profile.tsx":"27"},{"size":426,"mtime":1609960658119,"results":"28","hashOfConfig":"29"},{"size":3094,"mtime":1612361051651,"results":"30","hashOfConfig":"29"},{"size":930,"mtime":1612358288923,"results":"31","hashOfConfig":"29"},{"size":7123,"mtime":1612361051651,"results":"32","hashOfConfig":"29"},{"size":96,"mtime":1610497232959,"results":"33","hashOfConfig":"29"},{"size":247,"mtime":1611721654484,"results":"34","hashOfConfig":"29"},{"size":1953,"mtime":1612328374093,"results":"35","hashOfConfig":"29"},{"size":1415,"mtime":1611105102991,"results":"36","hashOfConfig":"29"},{"size":3446,"mtime":1612222278092,"results":"37","hashOfConfig":"29"},{"size":206,"mtime":1610259907293,"results":"38","hashOfConfig":"29"},{"size":1078,"mtime":1612361051655,"results":"39","hashOfConfig":"29"},{"size":1568,"mtime":1612361051655,"results":"40","hashOfConfig":"29"},{"size":3903,"mtime":1612361014123,"results":"41","hashOfConfig":"29"},{"size":4925,"mtime":1612361014123,"results":"42","hashOfConfig":"29"},{"size":4643,"mtime":1612328374093,"results":"43","hashOfConfig":"29"},{"size":958,"mtime":1611778897018,"results":"44","hashOfConfig":"29"},{"size":3837,"mtime":1612222278092,"results":"45","hashOfConfig":"29"},{"size":860,"mtime":1611779426902,"results":"46","hashOfConfig":"29"},{"size":549,"mtime":1610259460531,"results":"47","hashOfConfig":"29"},{"size":523,"mtime":1611102577627,"results":"48","hashOfConfig":"29"},{"size":431,"mtime":1611755326422,"results":"49","hashOfConfig":"29"},{"size":928,"mtime":1611105102987,"results":"50","hashOfConfig":"29"},{"size":2883,"mtime":1612328374093,"results":"51","hashOfConfig":"29"},{"size":6272,"mtime":1612361051655,"results":"52","hashOfConfig":"29"},{"size":685,"mtime":1612361014119,"results":"53","hashOfConfig":"29"},{"size":1853,"mtime":1612328374093,"results":"54","hashOfConfig":"29"},{"size":1176,"mtime":1611721654484,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1d14b6o",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/celvin/Desktop/new folder/way2way-react/src/index.tsx",[],["112","113"],"/home/celvin/Desktop/new folder/way2way-react/src/App.tsx",["114","115"],"/home/celvin/Desktop/new folder/way2way-react/src/Util/firebase.ts",[],"/home/celvin/Desktop/new folder/way2way-react/src/assets/functions.ts",["116"],"import firebase, { firebaseAuth, fireStorage, firestore, googleProvider } from '../Util/firebase';\n\n/**\n * Arrange array elements alphabetically \n * @param array \n */\nexport function sortDataAlphabetically(array: any) {\n    return array.sort((a: any, b: any) => {\n        var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n        if (nameA < nameB) //sort string ascending\n            return -1;\n        if (nameA > nameB)\n            return 1;\n        return 0 //default return value (no sorting)\n    })\n}\n\n/**\n * Create a new user using email password\n * @param data Object Contains user data\n * @param password string \n */\nexport async function createUser(\n    {\n        email,\n    }: any,\n\n    password: string\n) {\n    // body of the function \n    firebaseAuth.setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n        .then(async () => await firebaseAuth.createUserWithEmailAndPassword(email, password))\n        .catch((error) => console.error(error))\n\n}\n\n\n\n/**\n * Adds user data to the DB to be used afterwards\n * @param UID UserID that is unique to the project\n * @param data User data to be sent to the DB\n */\nexport async function addUserToDB(data: any, setUserData:any) {\n    const collection = firestore.collection('users');\n    const currentUser: any = firebaseAuth.currentUser;\n    console.log(currentUser)\n    console.log(data)\n\n    // const newData = {\n    //     ...data,\n    //     photoURL\n    // }\n    await collection.doc(currentUser.uid).set(data)\n        .then(() => setUserData(data))\n        .catch((e) => console.log(e))\n}\n\n/**\n * Login the user with simple email and password login credentials\n * @param email Login Credentials\n * @param password Login predentials\n * @param setState set global state for data that is received\n * @param setSignOut set the global state is the user is signed out or not\n */\nexport async function loginUser(email: string, password: string, CTX: any, type: string, rememberUser: boolean) {\n    // const persistenceType: string = (rememberUser ? firebase.auth.Auth.Persistence.LOCAL : firebase.auth.Auth.Persistence.SESSION)\n    firebaseAuth.setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n        .then(async () => {\n            if (type === \"email\") {\n                return await firebaseAuth.signInWithEmailAndPassword(email, password)\n            } else if (type === \"google\") {\n                return await firebaseAuth.signInWithRedirect(googleProvider)\n            }\n        })\n        // .then((user:any) => user.user.uid  )\n        // .then((UID) => getUserFromDB(UID, CTX.setUserData) )\n        .then(() => CTX.setSignOut(false))\n        .catch((error) => {\n            console.log(error)\n        });\n}\n\n\n/**\n * Reset pass\n * @param emailAddress string\n */\nexport async function forgotPassword(emailAddress: string) {\n\n    firebaseAuth.sendPasswordResetEmail(emailAddress).then(function () {\n        // Email sent.\n        console.log('password-reset Link sent')\n    }).catch(function (error) {\n        // An error happened.\n    });\n}\n\n/**\n * Retrieves the data from DB using UID received after login\n * @param UID UserID unique to a project\n * @param setState set global state for user info\n */\nexport async function getUserFromDB(UID: string, setState: any) {\n\n    const {\n        email,\n        uid = UID\n    }: any = await firebaseAuth.currentUser;\n\n    await firestore.collection('users').doc(uid).get()\n        .then((doc: any) => doc.data())\n        .then((userData: any) => {\n            const {\n                displayName,\n                phoneNumber,\n                photoURL\n            } = userData;\n\n            const newState = {\n                displayName,\n                email,\n                phoneNumber,\n                photoURL\n            }\n            setState(newState)\n        })\n    // const {\n    //     displayName,\n    //     email,\n    //     phoneNumber,\n    //     //userprofile url with default url if the images goes not exist\n    //     photoURL = defaultPhotoUrl\n    // } = value.userData;\n\n    // // await setState(currentUser)\n    // console.log(newState)\n}\n\n/**\n * Retrieve data from DB for the list of agencies\n * @param setState Sets data for agencies\n */\nexport async function getData(setState: any) {\n    const newState: any = []\n    const data = await firestore.collection('agencies').get()\n    await data.forEach((doc) => newState.push(doc.data()))\n    await setState(newState)\n    return;\n}\n\nexport async function getAdData(AID: string, setState: any) {\n\n    await firestore.collection('ads').doc(AID).get()\n        .then(async (res) => res.data())\n        .then(async (res: any) => await setState(res))\n        .catch(err => console.log(err))\n}\n\n\n/**\n * Uploads the image to the database and returns the url of the image\n * @param image File that is uploaded by the user\n * @param UID User id of the user \n */\nexport async function getImageUrl(image: any, UID: string, setImageUrl: any) {\n    const storageRef = fireStorage.ref();\n\n    // upload file to the images folder\n    const uploadTask = storageRef.child(`images/${UID}/${image.name}`).put(image)\n    // get progress of  upload file\n    await uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\n        (snapshot): any => {\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log('Upload is ' + progress + '% done');\n            switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\n                    console.log('Upload is paused');\n                    break;\n                case firebase.storage.TaskState.RUNNING: // or 'running'\n                    console.log('Upload is running');\n                    break;\n            }\n        }, (error) => {\n            switch (error.code) {\n                case 'storage/unauthorized':\n                    // User doesn't have permission to access the object\n                    break;\n\n                case 'storage/canceled':\n                    // User canceled the upload\n                    break;\n\n\n                case 'storage/unknown':\n                    // Unknown error occurred, inspect error.serverResponse\n                    break;\n            }\n            // get download url when download is finished\n        }, async () => {\n            await uploadTask.snapshot.ref.getDownloadURL()\n                .then(async (downloadURL) => await setImageUrl(downloadURL))\n        }\n    )\n\n}\n\n/**\n * Create the post in the DB to be accesssed later\n * @param postData Post data entered by the user\n */\nexport function createPost(postData: object) {\n    console.log(\"Crating\")\n    firestore.collection('ads').doc().set(postData)\n        .then(() => console.log('it worked'))\n        .catch((e) => console.log(e))\n}\n\n\n/**\n * Get data from the database\n */\nexport async function getAds(setAds: any) {\n    const snapshot = await firestore.collection('ads').get();\n    const data: any = [];\n    snapshot.forEach(element => {\n        data.push(element.data());//need to find a way to send the post id to the state to be displayed\n    });\n    await setAds(data)\n}\n\n\n// export function checkIfAdmin(UID, setError, error) {\n//     firestore.collection('user').doc('admin').get()\n//         .then(res => res.data().UID)\n//         .then(adminUID => {\n//             if (adminUID === UID) {\n//                 console.log(\"admin\")\n//                 window.location = \"/#/add-data\"\n//             } else {\n//                 Error('You are not the admin, Login as Admin')\n//             }\n//         })\n//         .catch(e => {\n//             setError({\n//                 message: e.message,\n//                 statusCode: 401\n//             })\n//             throw error;\n//         })\n// }\n","/home/celvin/Desktop/new folder/way2way-react/src/CTX/CTX.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Author/Author.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Home/Home.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Agency/Agency.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Login/Login.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/404/404.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Accomodation/Accomodation.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Accomodation/AdView/AdView.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Signup/Signup.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/UserProfile/UserProfile.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/Signup/UserInfo/UserInfo.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/ForgotPassword/ForgetPassword.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/Navbar/Navbar.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/assets/Hooks.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/AboutSection/AboutSection.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/AccomodationSection/AccomodationSection.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/AgencySection/AgencySection.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/AgencyList/AgencyList.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/AdCard/AdCard.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/views/UserProfile/PostAccAdd/PostAccAdd.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/Navbar/ToggleButton/ToggleButton.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/UploadImages/UploadImages.tsx",[],"/home/celvin/Desktop/new folder/way2way-react/src/Components/Profile/Profile.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":13,"column":18,"nodeType":"123","messageId":"124","endLine":13,"endColumn":31},{"ruleId":"121","severity":1,"message":"125","line":32,"column":13,"nodeType":"123","messageId":"124","endLine":32,"endColumn":16},{"ruleId":"121","severity":1,"message":"126","line":107,"column":9,"nodeType":"123","messageId":"124","endLine":107,"endColumn":14},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'getUserFromDB' is defined but never used.","Identifier","unusedVar","'uid' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]